const config = require('./config.js')

function higher_pow2(n) {
    const p = Math.ceil(Math.log(n) / Math.log(2))
    return Math.pow(2, p)
}

// The dimensions of the map image in pixels generated by Vips at the highest quality zoom
const map_pixel_width = higher_pow2(config.image_width)
const map_pixel_height = higher_pow2(config.image_height)
// The dimensions of the map in coordinates
const map_width = map_pixel_width/config.tile_width
const map_height = map_pixel_height/config.tile_width

// The location of the Hopeport Portal Stone in coordinates, relative to the topleft corner of the image
const hopeport_portal_stone_x = Math.floor(config.hopeport_portal_stone_image_x/config.tile_width)
const hopeport_portal_stone_y = Math.floor(config.hopeport_portal_stone_image_y/config.tile_width)
// The borders of the most zoomed-out map tile map in coordinates
const border_left = config.hopeport_portal_stone_coord_x - hopeport_portal_stone_x
const border_up = config.hopeport_portal_stone_coord_y - hopeport_portal_stone_y
const border_right = border_left + map_width
const border_down = border_up + map_height

const size_ratio = 2*config.tile_width/config.image_tile_dimensions // TODO - this equation works for the current image zoom, but I'm not sure why we need to multiply by 2... if ever the coordinate system breaks, this might be the culprit

// Automatically translate the map so that the Hopeport Portal Stone is set to the desired coordinate in the config
// Also flip the y axis
const CRS = L.Util.extend(L.CRS.Simple, {transformation: new L.Transformation(size_ratio, -border_left * size_ratio, size_ratio, -border_up * size_ratio)})

module.exports = {
    CRS,
    bounds: L.latLngBounds([border_up, border_left], [border_down, border_right])
}